name: CI-CD Workflow - Docker build, push, deploy to KIND, and test

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:  

jobs:
  build-deploy-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Login to DockerHub
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # Build and push Docker image
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: varunb05/weather-py:latest

    # Set up Kubernetes in Docker (KIND)
    - name: Create KIND Cluster
      uses: helm/kind-action@v1

    # Deploy to KIND Cluster
    - name: Deploy to KIND
      run: |
        kubectl apply -f deployment.yaml

    # Test the deployment
    - name: Test
      run: |
        kubectl wait --for=condition=Ready pod -l app=weather-py --timeout=300s
        # Add commands to test the application
        # For instance, using curl to check if the app responds correctly
        NODE_PORT=$(kubectl get svc weather-py-service -o=jsonpath='{.spec.ports[0].nodePort}')
        NODE_IP=$(kubectl get nodes -o=jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        curl -s $NODE_IP:$NODE_PORT/place/Bangalore 
